# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      # - darwin
archives:
  - replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
      # 386: i386
      amd64: x86_64
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
# .goreleaser.yml
release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Note: it can only be one: either github, gitlab or gitea
  #github:
  #  owner: user
  #  name: repo

  # IDs of the archives to use.
  # Defaults to all.
  #ids:
  #  - foo
  #  - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  draft: true

  # If set, will create a release discussion in the category specified.
  # Default is empty.
  #discussion_category_name: General

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  #prerelease: auto

  # You can change the name of the release.
  # Default is `{{.Tag}}`
  name_template: "{{.ProjectName}}-{{.Tag}}"

  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  #disable: true

  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
  extra_files:
    - glob: ./*.txt
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
